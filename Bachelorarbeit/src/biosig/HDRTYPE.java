package biosig;

/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.0
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */


public class HDRTYPE {
  private long swigCPtr;
  protected boolean swigCMemOwn;

  protected HDRTYPE(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(HDRTYPE obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        biosigJNI.delete_HDRTYPE(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public void setVERSION(float value) {
    biosigJNI.HDRTYPE_VERSION_set(swigCPtr, this, value);
  }

  public float getVERSION() {
    return biosigJNI.HDRTYPE_VERSION_get(swigCPtr, this);
  }

  public void setFileName(String value) {
    biosigJNI.HDRTYPE_FileName_set(swigCPtr, this, value);
  }

  public String getFileName() {
    return biosigJNI.HDRTYPE_FileName_get(swigCPtr, this);
  }

  public void setTYPE(FileFormat value) {
    biosigJNI.HDRTYPE_TYPE_set(swigCPtr, this, value.swigValue());
  }

  public FileFormat getTYPE() {
    return FileFormat.swigToEnum(biosigJNI.HDRTYPE_TYPE_get(swigCPtr, this));
  }

  public void setIPaddr(SWIGTYPE_p_unsigned_char value) {
    biosigJNI.HDRTYPE_IPaddr_set(swigCPtr, this, SWIGTYPE_p_unsigned_char.getCPtr(value));
  }

  public SWIGTYPE_p_unsigned_char getIPaddr() {
    long cPtr = biosigJNI.HDRTYPE_IPaddr_get(swigCPtr, this);
    return (cPtr == 0) ? null : new SWIGTYPE_p_unsigned_char(cPtr, false);
  }

  public void setSampleRate(double value) {
    biosigJNI.HDRTYPE_SampleRate_set(swigCPtr, this, value);
  }

  public double getSampleRate() {
    return biosigJNI.HDRTYPE_SampleRate_get(swigCPtr, this);
  }

  public void setNRec(long value) {
    biosigJNI.HDRTYPE_NRec_set(swigCPtr, this, value);
  }

  public long getNRec() {
    return biosigJNI.HDRTYPE_NRec_get(swigCPtr, this);
  }

  public void setT0(long value) {
    biosigJNI.HDRTYPE_T0_set(swigCPtr, this, value);
  }

  public long getT0() {
    return biosigJNI.HDRTYPE_T0_get(swigCPtr, this);
  }

  public void setHeadLen(long value) {
    biosigJNI.HDRTYPE_HeadLen_set(swigCPtr, this, value);
  }

  public long getHeadLen() {
    return biosigJNI.HDRTYPE_HeadLen_get(swigCPtr, this);
  }

  public void setSPR(long value) {
    biosigJNI.HDRTYPE_SPR_set(swigCPtr, this, value);
  }

  public long getSPR() {
    return biosigJNI.HDRTYPE_SPR_get(swigCPtr, this);
  }

  public void setLOC(SWIGTYPE_p_unsigned_int value) {
    biosigJNI.HDRTYPE_LOC_set(swigCPtr, this, SWIGTYPE_p_unsigned_int.getCPtr(value));
  }

  public SWIGTYPE_p_unsigned_int getLOC() {
    long cPtr = biosigJNI.HDRTYPE_LOC_get(swigCPtr, this);
    return (cPtr == 0) ? null : new SWIGTYPE_p_unsigned_int(cPtr, false);
  }

  public void setNS(int value) {
    biosigJNI.HDRTYPE_NS_set(swigCPtr, this, value);
  }

  public int getNS() {
    return biosigJNI.HDRTYPE_NS_get(swigCPtr, this);
  }

  public void setTzmin(short value) {
    biosigJNI.HDRTYPE_tzmin_set(swigCPtr, this, value);
  }

  public short getTzmin() {
    return biosigJNI.HDRTYPE_tzmin_get(swigCPtr, this);
  }

  public void setRerefCHANNEL(CHANNEL_TYPE value) {
    biosigJNI.HDRTYPE_rerefCHANNEL_set(swigCPtr, this, CHANNEL_TYPE.getCPtr(value), value);
  }

  public CHANNEL_TYPE getRerefCHANNEL() {
    long cPtr = biosigJNI.HDRTYPE_rerefCHANNEL_get(swigCPtr, this);
    return (cPtr == 0) ? null : new CHANNEL_TYPE(cPtr, false);
  }

  public void setCHANNEL(CHANNEL_TYPE value) {
    biosigJNI.HDRTYPE_CHANNEL_set(swigCPtr, this, CHANNEL_TYPE.getCPtr(value), value);
  }

  public CHANNEL_TYPE getCHANNEL() {
    long cPtr = biosigJNI.HDRTYPE_CHANNEL_get(swigCPtr, this);
    return (cPtr == 0) ? null : new CHANNEL_TYPE(cPtr, false);
  }

  public SWIGTYPE_p_void getAECG() {
    long cPtr = biosigJNI.HDRTYPE_aECG_get(swigCPtr, this);
    return (cPtr == 0) ? null : new SWIGTYPE_p_void(cPtr, false);
  }

  public HDRTYPE() {
    this(biosigJNI.new_HDRTYPE(), true);
  }

}
